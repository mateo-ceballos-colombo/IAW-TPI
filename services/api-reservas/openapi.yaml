openapi: 3.1.0
info:
  title: CoworkReserve - Reservation API
  version: 1.0.0
  description: >
    API REST transaccional para gestionar reservas. Autenticación mediante Bearer JWT (Keycloak). Tiempos en ISO 8601.
servers:
  - url: https://api.coworkreserve.com/v1
security:
  - bearerAuth: []

tags:
  - name: Reservations
    description: Operaciones CRUD y de estado sobre reservas
  - name: Rooms
    description: Creación y catálogo de salas

paths:
  /reservations:
    get:
      tags: [Reservations]
      summary: Listar reservas
      description: Lista reservas con filtros opcionales.
      parameters:
        - in: query
          name: date
          description: >
            Fecha (YYYY-MM-DD) para filtrar reservas que toquen ese día (cualquier parte del intervalo).
          schema:
            type: string
            format: date
        - in: query
          name: status
          description: Filtrar por estado
          schema:
            $ref: '#/components/schemas/ReservationStatus'
        - in: query
          name: roomId
          description: Filtrar por sala
          schema:
            type: string
        - in: query
          name: requesterEmail
          description: Filtrar por email del solicitante
          schema:
            type: string
            format: email
      responses:
        '200':
          description: Lista de reservas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reservation'
        '401':
          $ref: '#/components/responses/Unauthorized'
    post:
      tags: [Reservations]
      summary: Crear una reserva
      description: Crea una nueva reserva. Publica evento reservation.created.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationCreateInput'
      responses:
        '201':
          description: Reserva creada
          headers:
            Location:
              description: URL del recurso creado
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          description: Conflicto de disponibilidad (overlap)
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'

  /reservations/{id}:
    get:
      tags: [Reservations]
      summary: Obtener una reserva por ID
      parameters:
        - $ref: '#/components/parameters/ReservationId'
      responses:
        '200':
          description: Reserva
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      tags: [Reservations]
      summary: Cancelar una reserva 
      description: >
        Marca la reserva como CANCELLED, publica evento reservation.canceled,
        y envía notificaciones.
      parameters:
        - $ref: '#/components/parameters/ReservationId'
      responses:
        '200':
          description: Reserva cancelada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

  /rooms:
    get:
      tags: [Rooms]
      summary: Listar salas
      responses:
        '200':
          description: Lista de salas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Room'
        '401':
          $ref: '#/components/responses/Unauthorized'
    post:
      tags: [Rooms]
      summary: Crear una sala
      description: Crea una nueva sala en el catálogo de coworking.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoomCreateInput'
      responses:
        '201':
          description: Sala creada exitosamente
          headers:
            Location:
              description: URL del recurso creado
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          description: Conflicto — ya existe una sala con ese nombre o ID
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'

  /rooms/{id}:
    get:
      tags: [Rooms]
      summary: Obtener sala por ID
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      responses:
        '200':
          description: Sala
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  parameters:
    ReservationId:
      in: path
      name: id
      required: true
      schema:
        type: string
      description: Identificador de la reserva

  responses:
    Unauthorized:
      description: No autenticado o token inválido
      content:
        application/problem+json:
          schema: { $ref: '#/components/schemas/Problem' }
    NotFound:
      description: Recurso no encontrado
      content:
        application/problem+json:
          schema: { $ref: '#/components/schemas/Problem' }
    BadRequest:
      description: Solicitud inválida
      content:
        application/problem+json:
          schema: { $ref: '#/components/schemas/Problem' }

  schemas:
    ReservationStatus:
      type: string
      enum: [CONFIRMED, CANCELLED]

    Reservation:
      type: object
      required:
        - id
        - roomId
        - title
        - requesterEmail
        - startsAt
        - endsAt
        - status
        - createdAt
      properties:
        id:
          type: string
        roomId:
          type: string
        title:
          type: string
        requesterEmail:
          type: string
          format: email
        startsAt:
          type: string
          format: date-time
          description: ISO 8601, UTC recomendado
        endsAt:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/ReservationStatus'
        createdAt:
          type: string
          format: date-time

    ReservationCreateInput:
      type: object
      required:
        - roomId
        - requesterEmail
        - title
        - startsAt
        - endsAt
      properties:
        roomId:
          type: string
        requesterEmail:
          type: string
          format: email
        title:
          type: string
        startsAt:
          type: string
          format: date-time
        endsAt:
          type: string
          format: date-time

    Room:
      type: object
      required:
        - id
        - name
        - capacity
        - createdAt
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
          nullable: true
        capacity:
          type: integer
          minimum: 1
        location:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time

    RoomCreateInput:
      type: object
      required:
        - name
        - capacity
      properties:
        name:
          type: string
          description: Nombre único de la sala
        description:
          type: string
          nullable: true
        capacity:
          type: integer
          minimum: 1
          description: Número máximo de personas
        location:
          type: string
          nullable: true
          description: Ubicación física o piso

    Problem:
      type: object
      description: RFC 9457 JSON Problem Details
      properties:
        type:   { type: string, format: uri, nullable: true }
        title:  { type: string }
        status: { type: integer }
        detail: { type: string, nullable: true }
        instance: { type: string, format: uri, nullable: true }
      required: [title, status]
